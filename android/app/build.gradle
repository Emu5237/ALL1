def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw  GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.secugen"
    compileSdk 31
//    ndkVersion '23.1.7779620'


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.secugen"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionCode
    }

//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.debug
            shrinkResources true
            minifyEnabled true
            proguardFiles

//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi' ,'arm64-v8a' ,'armeabi-v7a'
            universalApk true
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ["libs"]
        }
        debug {
            jni {
                srcDirs 'src/debug/jni'
            }
        }
    }



}

flutter {
    source '../..'
}


dependencies {
    implementation fileTree(include: ['*.jar', '*.so'], dir: 'libs')
//    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation files('src/debug/jniLibs/FDxSDKProAbeTreeAndroid.jar')
//    implementation files('src/debug/jniLibs/FDxSDKProAbeTreeAndroid.jar')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation files('libs/FDxSDKProAbeTreeAndroid.jar')

}